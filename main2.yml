---
- name: Common Configuration
  hosts: all
  gather_facts: false 
  become: true
  roles:
  - three_tier_common

- name: Deploy haproxy
  hosts: apps,frontends
  gather_facts: true 
  become: true
  tasks:
  - name: Run three_tier_frontend role
    include_role:
      name: three_tier_frontend
    when: >-
     'frontends' in group_names
 
- name: deploy tomcat
  hosts: apps
  gather_facts: false
  become: true

  tasks:
  - name: install tomcat
    package:
      name: tomcat
      state: latest
  - name: enable tomcat at boot
    service:
      name: tomcat
      enabled: yes

  - name: create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ansible
      state: directory

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.j2
      dest: /usr/share/tomcat/webapps/ansible/index.html
      mode: 0644

  - name: start tomcat
    service:
      name: tomcat
      state: started

- name: index.html on app 1
  hosts: app1
  gather_facts: false
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: index.html on app 1
  hosts: app2
  gather_facts: false
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: deploy postgres
  hosts: apps
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  - name: install progress
    command: "yum install -y postgresql-server"

  #- name: install postgres
  #  yum:
  #    name: postgresql-server
  #    state: latest
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
  - name: tell user to finish setting up postgres
    debug:
      msg: "Either uncomment the postgres setup or manually login and initialize"

 # only run the next 2 tasks once!
  - name: initilize postgres
    command: postgresql-setup initdb
    register: r_postgres_init
    failed_when: >-
      r_postgres_init.rc != 0 and
      r_postgres_init.stdout != 'Data directory is not empty!'    

#  - name: initilize postgres some more
#   command: chkconfig postgresql on

  - name: start postgres
    service:
      name: postgresql.service
      state: started

- name: deploy apache
  hosts: apps
  gather_facts: false
  become: true
  hosts: apps
  tasks:
  - name: install apache
    yum:
      name: httpd
      state: latest
  - name: enable apache at boot
    service:
      name: httpd
      enabled: yes
#  - name: start apache
#    service:
#      name: httpd
#      state: started
